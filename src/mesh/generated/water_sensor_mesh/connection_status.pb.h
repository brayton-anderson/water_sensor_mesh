/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_WATER_SENSOR_MESH_WATER_SENSOR_MESH_CONNECTION_STATUS_PB_H_INCLUDED
#define PB_WATER_SENSOR_MESH_WATER_SENSOR_MESH_CONNECTION_STATUS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* Ethernet or WiFi connection status */
typedef struct _water_sensor_mesh_NetworkConnectionStatus {
    /* IP address of device */
    uint32_t ip_address;
    /* Whether the device has an active connection or not */
    bool is_connected;
    /* Whether the device has an active connection to an MQTT broker or not */
    bool is_mqtt_connected;
    /* Whether the device is actively remote syslogging or not */
    bool is_syslog_connected;
} water_sensor_mesh_NetworkConnectionStatus;

/* WiFi connection status */
typedef struct _water_sensor_mesh_WifiConnectionStatus {
    /* Connection status */
    bool has_status;
    water_sensor_mesh_NetworkConnectionStatus status;
    /* WiFi access point SSID */
    char ssid[33];
    /* RSSI of wireless connection */
    int32_t rssi;
} water_sensor_mesh_WifiConnectionStatus;

/* Ethernet connection status */
typedef struct _water_sensor_mesh_EthernetConnectionStatus {
    /* Connection status */
    bool has_status;
    water_sensor_mesh_NetworkConnectionStatus status;
} water_sensor_mesh_EthernetConnectionStatus;

/* Bluetooth connection status */
typedef struct _water_sensor_mesh_BluetoothConnectionStatus {
    /* The pairing PIN for bluetooth */
    uint32_t pin;
    /* RSSI of bluetooth connection */
    int32_t rssi;
    /* Whether the device has an active connection or not */
    bool is_connected;
} water_sensor_mesh_BluetoothConnectionStatus;

/* Serial connection status */
typedef struct _water_sensor_mesh_SerialConnectionStatus {
    /* Serial baud rate */
    uint32_t baud;
    /* Whether the device has an active connection or not */
    bool is_connected;
} water_sensor_mesh_SerialConnectionStatus;

typedef struct _water_sensor_mesh_DeviceConnectionStatus {
    /* WiFi Status */
    bool has_wifi;
    water_sensor_mesh_WifiConnectionStatus wifi;
    /* WiFi Status */
    bool has_ethernet;
    water_sensor_mesh_EthernetConnectionStatus ethernet;
    /* Bluetooth Status */
    bool has_bluetooth;
    water_sensor_mesh_BluetoothConnectionStatus bluetooth;
    /* Serial Status */
    bool has_serial;
    water_sensor_mesh_SerialConnectionStatus serial;
} water_sensor_mesh_DeviceConnectionStatus;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define water_sensor_mesh_DeviceConnectionStatus_init_default {false, water_sensor_mesh_WifiConnectionStatus_init_default, false, water_sensor_mesh_EthernetConnectionStatus_init_default, false, water_sensor_mesh_BluetoothConnectionStatus_init_default, false, water_sensor_mesh_SerialConnectionStatus_init_default}
#define water_sensor_mesh_WifiConnectionStatus_init_default {false, water_sensor_mesh_NetworkConnectionStatus_init_default, "", 0}
#define water_sensor_mesh_EthernetConnectionStatus_init_default {false, water_sensor_mesh_NetworkConnectionStatus_init_default}
#define water_sensor_mesh_NetworkConnectionStatus_init_default {0, 0, 0, 0}
#define water_sensor_mesh_BluetoothConnectionStatus_init_default {0, 0, 0}
#define water_sensor_mesh_SerialConnectionStatus_init_default {0, 0}
#define water_sensor_mesh_DeviceConnectionStatus_init_zero {false, water_sensor_mesh_WifiConnectionStatus_init_zero, false, water_sensor_mesh_EthernetConnectionStatus_init_zero, false, water_sensor_mesh_BluetoothConnectionStatus_init_zero, false, water_sensor_mesh_SerialConnectionStatus_init_zero}
#define water_sensor_mesh_WifiConnectionStatus_init_zero {false, water_sensor_mesh_NetworkConnectionStatus_init_zero, "", 0}
#define water_sensor_mesh_EthernetConnectionStatus_init_zero {false, water_sensor_mesh_NetworkConnectionStatus_init_zero}
#define water_sensor_mesh_NetworkConnectionStatus_init_zero {0, 0, 0, 0}
#define water_sensor_mesh_BluetoothConnectionStatus_init_zero {0, 0, 0}
#define water_sensor_mesh_SerialConnectionStatus_init_zero {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define water_sensor_mesh_NetworkConnectionStatus_ip_address_tag 1
#define water_sensor_mesh_NetworkConnectionStatus_is_connected_tag 2
#define water_sensor_mesh_NetworkConnectionStatus_is_mqtt_connected_tag 3
#define water_sensor_mesh_NetworkConnectionStatus_is_syslog_connected_tag 4
#define water_sensor_mesh_WifiConnectionStatus_status_tag 1
#define water_sensor_mesh_WifiConnectionStatus_ssid_tag 2
#define water_sensor_mesh_WifiConnectionStatus_rssi_tag 3
#define water_sensor_mesh_EthernetConnectionStatus_status_tag 1
#define water_sensor_mesh_BluetoothConnectionStatus_pin_tag 1
#define water_sensor_mesh_BluetoothConnectionStatus_rssi_tag 2
#define water_sensor_mesh_BluetoothConnectionStatus_is_connected_tag 3
#define water_sensor_mesh_SerialConnectionStatus_baud_tag 1
#define water_sensor_mesh_SerialConnectionStatus_is_connected_tag 2
#define water_sensor_mesh_DeviceConnectionStatus_wifi_tag 1
#define water_sensor_mesh_DeviceConnectionStatus_ethernet_tag 2
#define water_sensor_mesh_DeviceConnectionStatus_bluetooth_tag 3
#define water_sensor_mesh_DeviceConnectionStatus_serial_tag 4

/* Struct field encoding specification for nanopb */
#define water_sensor_mesh_DeviceConnectionStatus_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  wifi,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  ethernet,          2) \
X(a, STATIC,   OPTIONAL, MESSAGE,  bluetooth,         3) \
X(a, STATIC,   OPTIONAL, MESSAGE,  serial,            4)
#define water_sensor_mesh_DeviceConnectionStatus_CALLBACK NULL
#define water_sensor_mesh_DeviceConnectionStatus_DEFAULT NULL
#define water_sensor_mesh_DeviceConnectionStatus_wifi_MSGTYPE water_sensor_mesh_WifiConnectionStatus
#define water_sensor_mesh_DeviceConnectionStatus_ethernet_MSGTYPE water_sensor_mesh_EthernetConnectionStatus
#define water_sensor_mesh_DeviceConnectionStatus_bluetooth_MSGTYPE water_sensor_mesh_BluetoothConnectionStatus
#define water_sensor_mesh_DeviceConnectionStatus_serial_MSGTYPE water_sensor_mesh_SerialConnectionStatus

#define water_sensor_mesh_WifiConnectionStatus_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  status,            1) \
X(a, STATIC,   SINGULAR, STRING,   ssid,              2) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              3)
#define water_sensor_mesh_WifiConnectionStatus_CALLBACK NULL
#define water_sensor_mesh_WifiConnectionStatus_DEFAULT NULL
#define water_sensor_mesh_WifiConnectionStatus_status_MSGTYPE water_sensor_mesh_NetworkConnectionStatus

#define water_sensor_mesh_EthernetConnectionStatus_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  status,            1)
#define water_sensor_mesh_EthernetConnectionStatus_CALLBACK NULL
#define water_sensor_mesh_EthernetConnectionStatus_DEFAULT NULL
#define water_sensor_mesh_EthernetConnectionStatus_status_MSGTYPE water_sensor_mesh_NetworkConnectionStatus

#define water_sensor_mesh_NetworkConnectionStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FIXED32,  ip_address,        1) \
X(a, STATIC,   SINGULAR, BOOL,     is_connected,      2) \
X(a, STATIC,   SINGULAR, BOOL,     is_mqtt_connected,   3) \
X(a, STATIC,   SINGULAR, BOOL,     is_syslog_connected,   4)
#define water_sensor_mesh_NetworkConnectionStatus_CALLBACK NULL
#define water_sensor_mesh_NetworkConnectionStatus_DEFAULT NULL

#define water_sensor_mesh_BluetoothConnectionStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   pin,               1) \
X(a, STATIC,   SINGULAR, INT32,    rssi,              2) \
X(a, STATIC,   SINGULAR, BOOL,     is_connected,      3)
#define water_sensor_mesh_BluetoothConnectionStatus_CALLBACK NULL
#define water_sensor_mesh_BluetoothConnectionStatus_DEFAULT NULL

#define water_sensor_mesh_SerialConnectionStatus_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   baud,              1) \
X(a, STATIC,   SINGULAR, BOOL,     is_connected,      2)
#define water_sensor_mesh_SerialConnectionStatus_CALLBACK NULL
#define water_sensor_mesh_SerialConnectionStatus_DEFAULT NULL

extern const pb_msgdesc_t water_sensor_mesh_DeviceConnectionStatus_msg;
extern const pb_msgdesc_t water_sensor_mesh_WifiConnectionStatus_msg;
extern const pb_msgdesc_t water_sensor_mesh_EthernetConnectionStatus_msg;
extern const pb_msgdesc_t water_sensor_mesh_NetworkConnectionStatus_msg;
extern const pb_msgdesc_t water_sensor_mesh_BluetoothConnectionStatus_msg;
extern const pb_msgdesc_t water_sensor_mesh_SerialConnectionStatus_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define water_sensor_mesh_DeviceConnectionStatus_fields &water_sensor_mesh_DeviceConnectionStatus_msg
#define water_sensor_mesh_WifiConnectionStatus_fields &water_sensor_mesh_WifiConnectionStatus_msg
#define water_sensor_mesh_EthernetConnectionStatus_fields &water_sensor_mesh_EthernetConnectionStatus_msg
#define water_sensor_mesh_NetworkConnectionStatus_fields &water_sensor_mesh_NetworkConnectionStatus_msg
#define water_sensor_mesh_BluetoothConnectionStatus_fields &water_sensor_mesh_BluetoothConnectionStatus_msg
#define water_sensor_mesh_SerialConnectionStatus_fields &water_sensor_mesh_SerialConnectionStatus_msg

/* Maximum encoded size of messages (where known) */
#define WATER_SENSOR_MESH_WATER_SENSOR_MESH_CONNECTION_STATUS_PB_H_MAX_SIZE water_sensor_mesh_DeviceConnectionStatus_size
#define water_sensor_mesh_BluetoothConnectionStatus_size 19
#define water_sensor_mesh_DeviceConnectionStatus_size   106
#define water_sensor_mesh_EthernetConnectionStatus_size 13
#define water_sensor_mesh_NetworkConnectionStatus_size  11
#define water_sensor_mesh_SerialConnectionStatus_size   8
#define water_sensor_mesh_WifiConnectionStatus_size     58

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
