/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_WATER_SENSOR_MESH_WATER_SENSOR_MESH_DEVICE_UI_PB_H_INCLUDED
#define PB_WATER_SENSOR_MESH_WATER_SENSOR_MESH_DEVICE_UI_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _water_sensor_mesh_CompassMode {
    /* Compass with dynamic ring and heading */
    water_sensor_mesh_CompassMode_DYNAMIC = 0,
    /* Compass with fixed ring and heading */
    water_sensor_mesh_CompassMode_FIXED_RING = 1,
    /* Compass with heading and freeze option */
    water_sensor_mesh_CompassMode_FREEZE_HEADING = 2
} water_sensor_mesh_CompassMode;

typedef enum _water_sensor_mesh_Theme {
    /* Dark */
    water_sensor_mesh_Theme_DARK = 0,
    /* Light */
    water_sensor_mesh_Theme_LIGHT = 1,
    /* Red */
    water_sensor_mesh_Theme_RED = 2
} water_sensor_mesh_Theme;

/* Localization */
typedef enum _water_sensor_mesh_Language {
    /* English */
    water_sensor_mesh_Language_ENGLISH = 0,
    /* French */
    water_sensor_mesh_Language_FRENCH = 1,
    /* German */
    water_sensor_mesh_Language_GERMAN = 2,
    /* Italian */
    water_sensor_mesh_Language_ITALIAN = 3,
    /* Portuguese */
    water_sensor_mesh_Language_PORTUGUESE = 4,
    /* Spanish */
    water_sensor_mesh_Language_SPANISH = 5,
    /* Swedish */
    water_sensor_mesh_Language_SWEDISH = 6,
    /* Finnish */
    water_sensor_mesh_Language_FINNISH = 7,
    /* Polish */
    water_sensor_mesh_Language_POLISH = 8,
    /* Turkish */
    water_sensor_mesh_Language_TURKISH = 9,
    /* Serbian */
    water_sensor_mesh_Language_SERBIAN = 10,
    /* Russian */
    water_sensor_mesh_Language_RUSSIAN = 11,
    /* Dutch */
    water_sensor_mesh_Language_DUTCH = 12,
    /* Greek */
    water_sensor_mesh_Language_GREEK = 13,
    /* Norwegian */
    water_sensor_mesh_Language_NORWEGIAN = 14,
    /* Slovenian */
    water_sensor_mesh_Language_SLOVENIAN = 15,
    /* Ukrainian */
    water_sensor_mesh_Language_UKRAINIAN = 16,
    /* Bulgarian */
    water_sensor_mesh_Language_BULGARIAN = 17,
    /* Simplified Chinese (experimental) */
    water_sensor_mesh_Language_SIMPLIFIED_CHINESE = 30,
    /* Traditional Chinese (experimental) */
    water_sensor_mesh_Language_TRADITIONAL_CHINESE = 31
} water_sensor_mesh_Language;

/* Struct definitions */
typedef struct _water_sensor_mesh_NodeFilter {
    /* Filter unknown nodes */
    bool unknown_switch;
    /* Filter offline nodes */
    bool offline_switch;
    /* Filter nodes w/o public key */
    bool public_key_switch;
    /* Filter based on hops away */
    int8_t hops_away;
    /* Filter nodes w/o position */
    bool position_switch;
    /* Filter nodes by matching name string */
    char node_name[16];
    /* Filter based on channel */
    int8_t channel;
} water_sensor_mesh_NodeFilter;

typedef struct _water_sensor_mesh_NodeHighlight {
    /* Hightlight nodes w/ active chat */
    bool chat_switch;
    /* Highlight nodes w/ position */
    bool position_switch;
    /* Highlight nodes w/ telemetry data */
    bool telemetry_switch;
    /* Highlight nodes w/ iaq data */
    bool iaq_switch;
    /* Highlight nodes by matching name string */
    char node_name[16];
} water_sensor_mesh_NodeHighlight;

typedef struct _water_sensor_mesh_GeoPoint {
    /* Zoom level */
    int8_t zoom;
    /* Coordinate: latitude */
    int32_t latitude;
    /* Coordinate: longitude */
    int32_t longitude;
} water_sensor_mesh_GeoPoint;

typedef struct _water_sensor_mesh_Map {
    /* Home coordinates */
    bool has_home;
    water_sensor_mesh_GeoPoint home;
    /* Map tile style */
    char style[20];
    /* Map scroll follows GPS */
    bool follow_gps;
} water_sensor_mesh_Map;

typedef PB_BYTES_ARRAY_T(16) water_sensor_mesh_DeviceUIConfig_calibration_data_t;
typedef struct _water_sensor_mesh_DeviceUIConfig {
    /* A version integer used to invalidate saved files when we make incompatible changes. */
    uint32_t version;
    /* TFT display brightness 1..255 */
    uint8_t screen_brightness;
    /* Screen timeout 0..900 */
    uint16_t screen_timeout;
    /* Screen/Settings lock enabled */
    bool screen_lock;
    bool settings_lock;
    uint32_t pin_code;
    /* Color theme */
    water_sensor_mesh_Theme theme;
    /* Audible message, banner and ring tone */
    bool alert_enabled;
    bool banner_enabled;
    uint8_t ring_tone_id;
    /* Localization */
    water_sensor_mesh_Language language;
    /* Node list filter */
    bool has_node_filter;
    water_sensor_mesh_NodeFilter node_filter;
    /* Node list highlightening */
    bool has_node_highlight;
    water_sensor_mesh_NodeHighlight node_highlight;
    /* 8 integers for screen calibration data */
    water_sensor_mesh_DeviceUIConfig_calibration_data_t calibration_data;
    /* Map related data */
    bool has_map_data;
    water_sensor_mesh_Map map_data;
    /* Compass mode */
    water_sensor_mesh_CompassMode compass_mode;
    /* RGB color for BaseUI
 0xRRGGBB format, e.g. 0xFF0000 for red */
    uint32_t screen_rgb_color;
    /* Clockface analog style
 true for analog clockface, false for digital clockface */
    bool is_clockface_analog;
} water_sensor_mesh_DeviceUIConfig;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _water_sensor_mesh_CompassMode_MIN water_sensor_mesh_CompassMode_DYNAMIC
#define _water_sensor_mesh_CompassMode_MAX water_sensor_mesh_CompassMode_FREEZE_HEADING
#define _water_sensor_mesh_CompassMode_ARRAYSIZE ((water_sensor_mesh_CompassMode)(water_sensor_mesh_CompassMode_FREEZE_HEADING+1))

#define _water_sensor_mesh_Theme_MIN water_sensor_mesh_Theme_DARK
#define _water_sensor_mesh_Theme_MAX water_sensor_mesh_Theme_RED
#define _water_sensor_mesh_Theme_ARRAYSIZE ((water_sensor_mesh_Theme)(water_sensor_mesh_Theme_RED+1))

#define _water_sensor_mesh_Language_MIN water_sensor_mesh_Language_ENGLISH
#define _water_sensor_mesh_Language_MAX water_sensor_mesh_Language_TRADITIONAL_CHINESE
#define _water_sensor_mesh_Language_ARRAYSIZE ((water_sensor_mesh_Language)(water_sensor_mesh_Language_TRADITIONAL_CHINESE+1))

#define water_sensor_mesh_DeviceUIConfig_theme_ENUMTYPE water_sensor_mesh_Theme
#define water_sensor_mesh_DeviceUIConfig_language_ENUMTYPE water_sensor_mesh_Language
#define water_sensor_mesh_DeviceUIConfig_compass_mode_ENUMTYPE water_sensor_mesh_CompassMode






/* Initializer values for message structs */
#define water_sensor_mesh_DeviceUIConfig_init_default   {0, 0, 0, 0, 0, 0, _water_sensor_mesh_Theme_MIN, 0, 0, 0, _water_sensor_mesh_Language_MIN, false, water_sensor_mesh_NodeFilter_init_default, false, water_sensor_mesh_NodeHighlight_init_default, {0, {0}}, false, water_sensor_mesh_Map_init_default, _water_sensor_mesh_CompassMode_MIN, 0, 0}
#define water_sensor_mesh_NodeFilter_init_default       {0, 0, 0, 0, 0, "", 0}
#define water_sensor_mesh_NodeHighlight_init_default    {0, 0, 0, 0, ""}
#define water_sensor_mesh_GeoPoint_init_default         {0, 0, 0}
#define water_sensor_mesh_Map_init_default              {false, water_sensor_mesh_GeoPoint_init_default, "", 0}
#define water_sensor_mesh_DeviceUIConfig_init_zero      {0, 0, 0, 0, 0, 0, _water_sensor_mesh_Theme_MIN, 0, 0, 0, _water_sensor_mesh_Language_MIN, false, water_sensor_mesh_NodeFilter_init_zero, false, water_sensor_mesh_NodeHighlight_init_zero, {0, {0}}, false, water_sensor_mesh_Map_init_zero, _water_sensor_mesh_CompassMode_MIN, 0, 0}
#define water_sensor_mesh_NodeFilter_init_zero          {0, 0, 0, 0, 0, "", 0}
#define water_sensor_mesh_NodeHighlight_init_zero       {0, 0, 0, 0, ""}
#define water_sensor_mesh_GeoPoint_init_zero            {0, 0, 0}
#define water_sensor_mesh_Map_init_zero                 {false, water_sensor_mesh_GeoPoint_init_zero, "", 0}

/* Field tags (for use in manual encoding/decoding) */
#define water_sensor_mesh_NodeFilter_unknown_switch_tag 1
#define water_sensor_mesh_NodeFilter_offline_switch_tag 2
#define water_sensor_mesh_NodeFilter_public_key_switch_tag 3
#define water_sensor_mesh_NodeFilter_hops_away_tag      4
#define water_sensor_mesh_NodeFilter_position_switch_tag 5
#define water_sensor_mesh_NodeFilter_node_name_tag      6
#define water_sensor_mesh_NodeFilter_channel_tag        7
#define water_sensor_mesh_NodeHighlight_chat_switch_tag 1
#define water_sensor_mesh_NodeHighlight_position_switch_tag 2
#define water_sensor_mesh_NodeHighlight_telemetry_switch_tag 3
#define water_sensor_mesh_NodeHighlight_iaq_switch_tag  4
#define water_sensor_mesh_NodeHighlight_node_name_tag   5
#define water_sensor_mesh_GeoPoint_zoom_tag             1
#define water_sensor_mesh_GeoPoint_latitude_tag         2
#define water_sensor_mesh_GeoPoint_longitude_tag        3
#define water_sensor_mesh_Map_home_tag                  1
#define water_sensor_mesh_Map_style_tag                 2
#define water_sensor_mesh_Map_follow_gps_tag            3
#define water_sensor_mesh_DeviceUIConfig_version_tag    1
#define water_sensor_mesh_DeviceUIConfig_screen_brightness_tag 2
#define water_sensor_mesh_DeviceUIConfig_screen_timeout_tag 3
#define water_sensor_mesh_DeviceUIConfig_screen_lock_tag 4
#define water_sensor_mesh_DeviceUIConfig_settings_lock_tag 5
#define water_sensor_mesh_DeviceUIConfig_pin_code_tag   6
#define water_sensor_mesh_DeviceUIConfig_theme_tag      7
#define water_sensor_mesh_DeviceUIConfig_alert_enabled_tag 8
#define water_sensor_mesh_DeviceUIConfig_banner_enabled_tag 9
#define water_sensor_mesh_DeviceUIConfig_ring_tone_id_tag 10
#define water_sensor_mesh_DeviceUIConfig_language_tag   11
#define water_sensor_mesh_DeviceUIConfig_node_filter_tag 12
#define water_sensor_mesh_DeviceUIConfig_node_highlight_tag 13
#define water_sensor_mesh_DeviceUIConfig_calibration_data_tag 14
#define water_sensor_mesh_DeviceUIConfig_map_data_tag   15
#define water_sensor_mesh_DeviceUIConfig_compass_mode_tag 16
#define water_sensor_mesh_DeviceUIConfig_screen_rgb_color_tag 17
#define water_sensor_mesh_DeviceUIConfig_is_clockface_analog_tag 18

/* Struct field encoding specification for nanopb */
#define water_sensor_mesh_DeviceUIConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   version,           1) \
X(a, STATIC,   SINGULAR, UINT32,   screen_brightness,   2) \
X(a, STATIC,   SINGULAR, UINT32,   screen_timeout,    3) \
X(a, STATIC,   SINGULAR, BOOL,     screen_lock,       4) \
X(a, STATIC,   SINGULAR, BOOL,     settings_lock,     5) \
X(a, STATIC,   SINGULAR, UINT32,   pin_code,          6) \
X(a, STATIC,   SINGULAR, UENUM,    theme,             7) \
X(a, STATIC,   SINGULAR, BOOL,     alert_enabled,     8) \
X(a, STATIC,   SINGULAR, BOOL,     banner_enabled,    9) \
X(a, STATIC,   SINGULAR, UINT32,   ring_tone_id,     10) \
X(a, STATIC,   SINGULAR, UENUM,    language,         11) \
X(a, STATIC,   OPTIONAL, MESSAGE,  node_filter,      12) \
X(a, STATIC,   OPTIONAL, MESSAGE,  node_highlight,   13) \
X(a, STATIC,   SINGULAR, BYTES,    calibration_data,  14) \
X(a, STATIC,   OPTIONAL, MESSAGE,  map_data,         15) \
X(a, STATIC,   SINGULAR, UENUM,    compass_mode,     16) \
X(a, STATIC,   SINGULAR, UINT32,   screen_rgb_color,  17) \
X(a, STATIC,   SINGULAR, BOOL,     is_clockface_analog,  18)
#define water_sensor_mesh_DeviceUIConfig_CALLBACK NULL
#define water_sensor_mesh_DeviceUIConfig_DEFAULT NULL
#define water_sensor_mesh_DeviceUIConfig_node_filter_MSGTYPE water_sensor_mesh_NodeFilter
#define water_sensor_mesh_DeviceUIConfig_node_highlight_MSGTYPE water_sensor_mesh_NodeHighlight
#define water_sensor_mesh_DeviceUIConfig_map_data_MSGTYPE water_sensor_mesh_Map

#define water_sensor_mesh_NodeFilter_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     unknown_switch,    1) \
X(a, STATIC,   SINGULAR, BOOL,     offline_switch,    2) \
X(a, STATIC,   SINGULAR, BOOL,     public_key_switch,   3) \
X(a, STATIC,   SINGULAR, INT32,    hops_away,         4) \
X(a, STATIC,   SINGULAR, BOOL,     position_switch,   5) \
X(a, STATIC,   SINGULAR, STRING,   node_name,         6) \
X(a, STATIC,   SINGULAR, INT32,    channel,           7)
#define water_sensor_mesh_NodeFilter_CALLBACK NULL
#define water_sensor_mesh_NodeFilter_DEFAULT NULL

#define water_sensor_mesh_NodeHighlight_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     chat_switch,       1) \
X(a, STATIC,   SINGULAR, BOOL,     position_switch,   2) \
X(a, STATIC,   SINGULAR, BOOL,     telemetry_switch,   3) \
X(a, STATIC,   SINGULAR, BOOL,     iaq_switch,        4) \
X(a, STATIC,   SINGULAR, STRING,   node_name,         5)
#define water_sensor_mesh_NodeHighlight_CALLBACK NULL
#define water_sensor_mesh_NodeHighlight_DEFAULT NULL

#define water_sensor_mesh_GeoPoint_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    zoom,              1) \
X(a, STATIC,   SINGULAR, INT32,    latitude,          2) \
X(a, STATIC,   SINGULAR, INT32,    longitude,         3)
#define water_sensor_mesh_GeoPoint_CALLBACK NULL
#define water_sensor_mesh_GeoPoint_DEFAULT NULL

#define water_sensor_mesh_Map_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  home,              1) \
X(a, STATIC,   SINGULAR, STRING,   style,             2) \
X(a, STATIC,   SINGULAR, BOOL,     follow_gps,        3)
#define water_sensor_mesh_Map_CALLBACK NULL
#define water_sensor_mesh_Map_DEFAULT NULL
#define water_sensor_mesh_Map_home_MSGTYPE water_sensor_mesh_GeoPoint

extern const pb_msgdesc_t water_sensor_mesh_DeviceUIConfig_msg;
extern const pb_msgdesc_t water_sensor_mesh_NodeFilter_msg;
extern const pb_msgdesc_t water_sensor_mesh_NodeHighlight_msg;
extern const pb_msgdesc_t water_sensor_mesh_GeoPoint_msg;
extern const pb_msgdesc_t water_sensor_mesh_Map_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define water_sensor_mesh_DeviceUIConfig_fields &water_sensor_mesh_DeviceUIConfig_msg
#define water_sensor_mesh_NodeFilter_fields &water_sensor_mesh_NodeFilter_msg
#define water_sensor_mesh_NodeHighlight_fields &water_sensor_mesh_NodeHighlight_msg
#define water_sensor_mesh_GeoPoint_fields &water_sensor_mesh_GeoPoint_msg
#define water_sensor_mesh_Map_fields &water_sensor_mesh_Map_msg

/* Maximum encoded size of messages (where known) */
#define WATER_SENSOR_MESH_WATER_SENSOR_MESH_DEVICE_UI_PB_H_MAX_SIZE water_sensor_mesh_DeviceUIConfig_size
#define water_sensor_mesh_DeviceUIConfig_size           201
#define water_sensor_mesh_GeoPoint_size                 33
#define water_sensor_mesh_Map_size                      58
#define water_sensor_mesh_NodeFilter_size               47
#define water_sensor_mesh_NodeHighlight_size            25

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
